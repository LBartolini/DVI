services:

###### ENTERPRISE 
  alpineEnterprise:
    image: alpine
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    entrypoint: tail -f /dev/null
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.2
  
  enterprise-db:
    #build: framework/db_vulhub
    build: framework/db/mariadb
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - scada_db:/var/lib/mysql
      - ./config/scada_db:/docker-entrypoint-initdb.d:ro
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - MYSQL_ROOT_PASSWORD=root
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.3

  scada:
    build: framework/scada
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - DB_HOST=172.60.0.3
      - DB_PORT=3306
      - SCADA_DB_NAME=scadalts
      - SCADA_DB_USER=scadalts
      - SCADA_DB_PASS=scadalts
      - JAVA_OPTS=-XX:+UseStringDeduplication -Xms1m -XX:MinHeapFreeRatio=1 -XX:MaxHeapFreeRatio=20
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - ./config/scada/uploads:/scada-lts-uploads:ro
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.4

  camunda:
    build: framework/bpmn/camunda
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - DB_HOST=172.60.0.3
      - DB_PORT=3306
      - CAMUNDA_DB_NAME=camunda
      - CAMUNDA_DB_USER=camunda
      - CAMUNDA_DB_PASS=camunda
      - JAVA_OPTS=-XX:+UseStringDeduplication -Xms1m -XX:MinHeapFreeRatio=1 -XX:MaxHeapFreeRatio=20
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.5
  
  camunda-deployer:
    build: framework/bpmn/deployer
    restart: on-failure
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - CAMUNDA_HOST=172.60.0.5
      - CAMUNDA_PORT=8080
      - WORKFLOWS_DIR=/usr/share/camunda/workflows
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - ./config/bpmn/definitions:/usr/share/camunda/workflows:ro
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.6

  camunda-cron:
    build: framework/bpmn/cron
    restart: on-failure
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - CAMUNDA_HOST=172.60.0.5
      - CAMUNDA_PORT=8080
      - SCADA_HOST=172.60.0.4
      - SCADA_PORT=8080
      - DITTO_HOST=ditto
      - DITTO_PORT=8080
      - DOCKER_API_PROXY_HOST=docker_api_proxy
      - DOCKER_API_PROXY_PORT=1337
      - CRON_DIR=/usr/share/camunda/cronjobs
      - INTERVAL_SECONDS=10s
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - ./config/bpmn/cronjobs:/usr/share/camunda/cronjobs:ro
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.7

  camunda-viewer:
    build: framework/bpmn/viewer
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - SCADALTS_URL=http://172.60.0.4:8080/ScadaLTS
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - ./config/bpmn/definitions:/srv/workflows:ro
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.8
  
  ditto-db:
    mem_limit: 128m
    build: framework/db/mongo
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s      
    depends_on:
      enterprise:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - ditto_db:/data/db
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"      
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.9

  ditto-register:
    build: framework/ditto/register
    restart: on-failure
    depends_on:
      enterprise:
        condition: service_healthy 
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s      
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local    
      - IT_UNIGE_FDT_DITTO_URL=ws://ditto-frontend
      - IT_UNIGE_FDT_DITTO_USERNAME=administrator
      - IT_UNIGE_FDT_DITTO_PASSWORD=secret
      - IT_UNIGE_FDT_DEFINITIONS_PATH=/ditto-data
      - JAVA_OPTS=-XX:+UseStringDeduplication -Xms1m -XX:MinHeapFreeRatio=1 -XX:MaxHeapFreeRatio=20
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
      - ./config/ditto:/ditto-data:ro
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"       
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.10

  ditto:
    build: framework/ditto/binpack
    restart: on-failure
    depends_on:
      enterprise:
        condition: service_healthy 
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s  
    cap_add:
      - NET_ADMIN        
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - INSTANCE_INDEX="1"
      - MONGO_DB_HOSTNAME=ditto-db
      - BIND_HOSTNAME=0.0.0.0
      - ENABLE_PRE_AUTHENTICATION=true
      - DEVOPS_PASSWORD=password
      - JAVA_OPTS=-XX:+UseStringDeduplication -Xms1m -XX:MinHeapFreeRatio=1 -XX:MaxHeapFreeRatio=20
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro  
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"          
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.11
  
  ditto-frontend:
    build: framework/ditto/frontend
    depends_on:
      enterprise:
        condition: service_healthy 
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.60.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s  
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.60.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
      - FDT_PLAINTEXT_CREDENTIALS=y
      - FDT_CREDENTIALS=
          administrator:secret
          backend:secret
          camunda-people-simulator:secret
          sun-simulator:secret
          people-simulator:secret
          energy-store-1:secret
          gas-generator-1:secret
          solar-panel-1:secret
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro  
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"          
    networks:
      n40_enterprise:
        ipv4_address: 172.60.0.12

###### INDUSTRIAL 
  alpineIndustrial:
    image: alpine
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.90.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      industrial:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
    environment:
      - GATEWAY=172.90.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    entrypoint: tail -f /dev/null
    networks:
      n60_industrial:
        ipv4_address: 172.90.0.2

###### DMZ 
  dvwa:
    image: vulnerables/web-dvwa
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.28.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    cap_add:
      - NET_ADMIN
    volumes:
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
    environment:
      - GATEWAY=172.28.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    depends_on:
      perimeter:
        condition: service_healthy
    networks:
      n20_dmz:
        ipv4_address: 172.28.0.2

  dns:
    build: framework/dns
    healthcheck:
      test: test -e /.setup_correctly && (ping -c 5 172.28.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    cap_add:
      - NET_ADMIN
    environment:
      - GATEWAY=172.28.0.1
      - DNS=172.28.0.3
      - DNS_BASE_SEARCH=campus-savona.local
    post_start:
       - command: /bin/sh -c "chmod +x /initial_setup.sh; /initial_setup.sh"
    volumes:
      - ./config/dns/db.campus-savona.dt:/etc/bind/db.campus-savona.dt:ro
      - ./config/dns/db.campus-savona.local:/etc/bind/db.campus-savona.local:ro
      - ./config/dns/named.conf.local:/etc/bind/named.conf.local:ro
      - ./config/dns/named.conf.options:/etc/bind/named.conf.options:ro
      - ./framework/initial_setup.sh:/initial_setup.sh:ro
    depends_on:
      perimeter:
        condition: service_healthy
    networks:
      n20_dmz:
        ipv4_address: 172.28.0.3      

###### ROUTER 

  perimeter:
    image: openwrt/rootfs:x86_64-openwrt-23.05
    hostname: perimeter
    restart: unless-stopped
    entrypoint: "/sbin/init"
    ports:
      - 5000:5000 # dvwa
      - 5001:5001 # scada
      - 5002:5002 # bpmn viewer
      - 5003:5003 # 
      - 5004:5004 # 
      - 5005:5005 # 
      - 5006:5006 # 
      - 8081:80 # LuCI perimeter
      - 8082:8082 # LuCI enterprise
      - 8083:8083 # LuCI industrial
    volumes:
      - ./config/router/perimeter/init.sh:/etc/uci-defaults/init.sh
    healthcheck:
      test: test -e /.started && (ping -c 4 8.8.8.8 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    privileged: true
    networks:
      n0_internet:
        ipv4_address: 172.30.0.2
      n20_dmz:
        ipv4_address: 172.28.0.1
      n30_per2ent:
        ipv4_address: 172.50.0.1
  
  enterprise:
    image: openwrt/rootfs:x86_64-openwrt-23.05
    hostname: enterprise
    restart: unless-stopped
    entrypoint: "/sbin/init"
    volumes:
      - ./config/router/enterprise/init.sh:/etc/uci-defaults/init.sh
    healthcheck:
      test: test -e /.started && (ping -c 4 172.50.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      perimeter:
        condition: service_healthy
    privileged: true
    networks:
      n30_per2ent:
        ipv4_address: 172.50.0.2
      n40_enterprise:
        ipv4_address: 172.60.0.1
      n50_ent2ind:
        ipv4_address: 172.80.0.1

  industrial:
    image: openwrt/rootfs:x86_64-openwrt-23.05
    hostname: industrial
    restart: unless-stopped
    entrypoint: "/sbin/init"
    volumes:
      - ./config/router/industrial/init.sh:/etc/uci-defaults/init.sh
    healthcheck:
      test: test -e /.started && (ping -c 4 172.80.0.1 > /dev/null 2>&1 || exit 1)
      interval: 5s
      timeout: 5s
      retries: 2
      start_period: 10s
    depends_on:
      enterprise:
        condition: service_healthy
    privileged: true
    networks:
      n50_ent2ind:
        ipv4_address: 172.80.0.2
      n60_industrial:
        ipv4_address: 172.90.0.1

networks:
  n0_internet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24
          gateway: 172.30.0.1

  n20_dmz:
    driver: dovesnap
    internal: true
    driver_opts:
     ovs.bridge.mode: flat
     ovs.bridge.dpid: "0x120" 
     ovs.bridge.controller: "tcp:127.0.0.1:6653,tcp:127.0.0.1:6654"
     ovs.bridge.preallocate_ports: 12
    ipam:
      config:
        - subnet: 172.28.0.0/24
          gateway: 172.28.0.253

  n30_per2ent:
    driver: dovesnap
    internal: true
    driver_opts:
     ovs.bridge.mode: flat
     ovs.bridge.dpid: "0x130" 
     ovs.bridge.controller: "tcp:127.0.0.1:6653,tcp:127.0.0.1:6654"
     ovs.bridge.preallocate_ports: 12
    ipam:
      config:
        - subnet: 172.50.0.0/24
          gateway: 172.50.0.253
  
  n40_enterprise:
    driver: dovesnap
    internal: true
    driver_opts:
     ovs.bridge.mode: flat
     ovs.bridge.dpid: "0x140" 
     ovs.bridge.controller: "tcp:127.0.0.1:6653,tcp:127.0.0.1:6654"
     ovs.bridge.preallocate_ports: 12
    ipam:
      config:
        - subnet: 172.60.0.0/24
          gateway: 172.60.0.253
  
  n50_ent2ind:
    driver: dovesnap
    internal: true
    driver_opts:
     ovs.bridge.mode: flat
     ovs.bridge.dpid: "0x150" 
     ovs.bridge.controller: "tcp:127.0.0.1:6653,tcp:127.0.0.1:6654"
     ovs.bridge.preallocate_ports: 12
    ipam:
      config:
        - subnet: 172.80.0.0/24
          gateway: 172.80.0.253
  
  n60_industrial:
    driver: dovesnap
    internal: true
    driver_opts:
     ovs.bridge.mode: flat
     ovs.bridge.dpid: "0x160" 
     ovs.bridge.controller: "tcp:127.0.0.1:6653,tcp:127.0.0.1:6654"
     ovs.bridge.preallocate_ports: 12
    ipam:
      config:
        - subnet: 172.90.0.0/24
          gateway: 172.90.0.253

volumes:
  scada_db:
  ditto_db:
